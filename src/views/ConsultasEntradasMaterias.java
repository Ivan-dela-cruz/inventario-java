/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

 /*
 * ConsultasClientes.java
 *
 * Created on 15-abr-2013, 8:33:48
 */
package views;

import conexion.Conexion;
import java.sql.*;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import static inventario.Inventario.hc;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRExporter;
import net.sf.jasperreports.engine.JRExporterParameter;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.engine.export.JRPdfExporter;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;
import reportes.ReportEntradaMeteria;

/**
 *
 * @author Administrador
 */
public class ConsultasEntradasMaterias extends javax.swing.JInternalFrame {

    public static Connection sql;
    public static Statement s;

    public ConsultasEntradasMaterias() {
        initComponents();

        calendarfecha1.setEnabled(false);
        calendarfecha2.setEnabled(false);
        Cargarlistaclientes();
        System.out.println(fechaactual());

    }

    void Cargarlistaclientes() {
        DefaultTableModel modelo = new DefaultTableModel();
        String[] Titulos = {"CÓDIGO", "MATERIA", "OBSERVACIÓN", "CANTIDAD", "FECHA", "HORA"};
        modelo.setColumnIdentifiers(Titulos);
        this.tbregistros.setModel(modelo);

        Conexion j = new Conexion();
        j.conectar();
        sql = j.sql;
        try {
            String[] registros = new String[6];
            s = sql.createStatement();
            String ConsultaSQL = "SELECT materias.codigo,materias.nombre,entradas_materias.descripcion,entradas_materias.cantidad,entradas_materias.fecha,entradas_materias.hora  FROM entradas_materias,materias WHERE entradas_materias.id_materia=materias.id ";

            ResultSet rs = s.executeQuery(ConsultaSQL);

            while (rs.next()) {
                registros[0] = rs.getString("codigo");
                registros[1] = rs.getString("nombre");
                registros[2] = rs.getString("descripcion");
                registros[3] = rs.getString("cantidad");
                registros[4] = rs.getString("fecha");
                registros[5] = rs.getString("hora");
                modelo.addRow(registros);

            }
            tbregistros.setModel(modelo);
            txtcant.setText("" + tbregistros.getRowCount());
            sumar();
        } catch (SQLException ex) {
            Logger.getLogger(ConsultasEntradasMaterias.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        rdfecha = new javax.swing.JRadioButton();
        rdtodo = new javax.swing.JRadioButton();
        btnbuscar = new javax.swing.JButton();
        calendarFecha = new com.toedter.calendar.JDateChooser();
        intervalos = new javax.swing.JRadioButton();
        calendarfecha2 = new com.toedter.calendar.JDateChooser();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        calendarfecha1 = new com.toedter.calendar.JDateChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbregistros = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txtcant = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("ENTRADAS DE MATERIAS PRIMAS");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        buttonGroup1.add(rdfecha);
        rdfecha.setSelected(true);
        rdfecha.setText("Mostrar por fecha");
        rdfecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdfechaActionPerformed(evt);
            }
        });

        buttonGroup1.add(rdtodo);
        rdtodo.setText("Mostrar todos los registros");
        rdtodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdtodoActionPerformed(evt);
            }
        });

        btnbuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/buscar.png"))); // NOI18N
        btnbuscar.setText("Buscar");
        btnbuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbuscarActionPerformed(evt);
            }
        });

        buttonGroup1.add(intervalos);
        intervalos.setText("Intervalo fechas");
        intervalos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                intervalosActionPerformed(evt);
            }
        });

        jLabel2.setText("inicio");

        jLabel3.setText("fin");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rdtodo)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rdfecha)
                            .addComponent(intervalos))
                        .addGap(30, 30, 30)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(calendarfecha2, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(calendarfecha1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(calendarFecha, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addGap(26, 26, 26)
                .addComponent(btnbuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(rdfecha)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(intervalos)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rdtodo))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(calendarFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(6, 6, 6)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel2)
                                .addComponent(calendarfecha2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(calendarfecha1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel3)))
                        .addComponent(btnbuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tbregistros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tbregistros);

        jLabel1.setText("Cantidad de Registros");

        txtcant.setEnabled(false);
        txtcant.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtcantActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/print.png"))); // NOI18N
        jButton2.setText("Generar Reporte");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 84, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(125, 125, 125)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(txtcant, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 266, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(txtcant, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
public String getFechaFin() {
        String fecha = "";
        try {
            int dia = calendarFecha.getDate().getDate();
            int mes = calendarFecha.getDate().getMonth() + 1;
            int anio = calendarFecha.getDate().getYear() + 1900;

            if (mes < 10) {
                if (dia < 10) {
                    fecha = anio + "-0" + mes + "-0" + dia;
                } else {
                    fecha = anio + "-0" + mes + "-" + dia;
                }

            } else {
                fecha = anio + "-" + mes + "-" + dia;
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Debe elegir una fecha");
        }
        return fecha;

    }

    public String getFechaInicio() {
        String fecha = "";
        try {
            int dia = calendarfecha2.getDate().getDate();
            int mes = calendarfecha2.getDate().getMonth() + 1;
            int anio = calendarfecha2.getDate().getYear() + 1900;

            if (mes < 10) {
                if (dia < 10) {
                    fecha = anio + "-0" + mes + "-0" + dia;
                } else {
                    fecha = anio + "-0" + mes + "-" + dia;
                }

            } else {
                fecha = anio + "-" + mes + "-" + dia;
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Elegir una fecha de inicio");
        }
        return fecha;

    }

    public String getFechaInicioInter() {
        String fecha = "";
        try {
            int dia = calendarfecha1.getDate().getDate();
            int mes = calendarfecha1.getDate().getMonth() + 1;
            int anio = calendarfecha1.getDate().getYear() + 1900;

            if (mes < 10) {
                if (dia < 10) {
                    fecha = anio + "-0" + mes + "-0" + dia;
                } else {
                    fecha = anio + "-0" + mes + "-" + dia;
                }

            } else {
                fecha = anio + "-" + mes + "-" + dia;
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Elegir una fecha de finalización");
        }
        return fecha;

    }

    public static String fechaactual() {
        java.util.Date fecha = new java.util.Date();
        SimpleDateFormat formatofecha = new SimpleDateFormat("YYYY-MM-dd");
        return formatofecha.format(fecha);
    }

    public void sumar() {
        double sumtotal = 0;
        double cont;
        String filas;

        for (int i = 0; i < tbregistros.getRowCount(); i++) {
            filas = tbregistros.getValueAt(i, 3).toString();
            cont = Double.parseDouble(filas);

            sumtotal = sumtotal + cont;

        }
        //this.lbingresos.setText("" + Math.rint(sumtotal * 100) / 100);
    }

private void btnbuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbuscarActionPerformed
// TODO add your handling code here:

    if (rdfecha.isSelected() == true) {
        DefaultTableModel modelo = new DefaultTableModel();
        String[] Titulos = {"CÓDIGO", "MATERIA", "OBSERVACIÓN", "CANTIDAD", "FECHA", "HORA"};

        modelo.setColumnIdentifiers(Titulos);
        this.tbregistros.setModel(modelo);

        Conexion j = new Conexion();
        j.conectar();
        sql = j.sql;
        try {
            String[] registros = new String[6];
            s = sql.createStatement();
            String ConsultaSQL = "SELECT materias.codigo,materias.nombre,entradas_materias.descripcion,entradas_materias.cantidad,entradas_materias.fecha,entradas_materias.hora  FROM entradas_materias,materias WHERE entradas_materias.id_materia=materias.id AND fecha='" + getFechaFin() + "'";

            System.out.println("Fehca en contrada   =====>>>   " + ConsultaSQL);
            ResultSet rs = s.executeQuery(ConsultaSQL);

            while (rs.next()) {
                registros[0] = rs.getString("codigo");
                registros[1] = rs.getString("nombre");
                registros[2] = rs.getString("descripcion");
                registros[3] = rs.getString("cantidad");
                registros[4] = rs.getString("fecha");
                registros[5] = rs.getString("hora");
                modelo.addRow(registros);

            }
            tbregistros.setModel(modelo);
            txtcant.setText("" + tbregistros.getRowCount());
            sumar();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Revise la fecha elegida");
            //Logger.getLogger(ConsultasRegistrosClientes.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    if (intervalos.isSelected() == true) {

        DefaultTableModel modelo = new DefaultTableModel();
        String[] Titulos = {"CÓDIGO", "MATERIA", "OBSERVACIÓN", "CANTIDAD", "FECHA", "HORA"};
        modelo.setColumnIdentifiers(Titulos);
        this.tbregistros.setModel(modelo);

        Conexion j = new Conexion();
        j.conectar();
        sql = j.sql;
        try {
            String[] registros = new String[16];
            s = sql.createStatement();
            String ConsultaSQL = "SELECT materias.codigo,materias.nombre,entradas_materias.descripcion,entradas_materias.cantidad,entradas_materias.fecha,entradas_materias.hora  FROM entradas_materias,materias WHERE entradas_materias.id_materia=materias.id AND fecha BETWEEN '" + getFechaInicio()+ "' AND '" + getFechaInicioInter()+"'";
        System.out.println("INTERVALO en contrada   =====>>>   " + ConsultaSQL);
            ResultSet rs = s.executeQuery(ConsultaSQL);

            while (rs.next()) {
                registros[0] = rs.getString("codigo");
                registros[1] = rs.getString("nombre");
                registros[2] = rs.getString("descripcion");
                registros[3] = rs.getString("cantidad");
                registros[4] = rs.getString("fecha");
                registros[5] = rs.getString("hora");
                modelo.addRow(registros);

            }
            tbregistros.setModel(modelo);
            txtcant.setText("" + tbregistros.getRowCount());
            sumar();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Revise los campos");
            //Logger.getLogger(ConsultasRegistrosClientes.class.getName()).log(Level.SEVERE, null, ex);
        }

    }
    if (rdtodo.isSelected() == true) {
        Cargarlistaclientes();
        sumar();
    }

}//GEN-LAST:event_btnbuscarActionPerformed

private void rdtodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdtodoActionPerformed
// TODO add your handling code here:
    Cargarlistaclientes();
    calendarFecha.setEnabled(false);
    calendarfecha1.setEnabled(false);
    calendarfecha2.setEnabled(false);
}//GEN-LAST:event_rdtodoActionPerformed

private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

    hc = new Conexion();

    try {
        // TODO add your handling code here:
        List<ReportEntradaMeteria> listaregistros = new ArrayList<ReportEntradaMeteria>();
        int filas = tbregistros.getRowCount();
        //String cod_barras, String ci, String nombre, String apellido, String direccion, String placa, String modelo, String color
        for (int i = 0; i < filas; i++) {
            ReportEntradaMeteria p = new ReportEntradaMeteria(
                    tbregistros.getValueAt(i, 0).toString(),
                    tbregistros.getValueAt(i, 1).toString(),
                    tbregistros.getValueAt(i, 2).toString(),
                    tbregistros.getValueAt(i, 3).toString(),
                    tbregistros.getValueAt(i, 4).toString(),
                    tbregistros.getValueAt(i, 5).toString()
                   
            );
            listaregistros.add(p);
        }
         String path = "src\\reportes\\ReportEntradaMateria.jasper";
       

        JasperReport reporte;
        reporte = (JasperReport) JRLoader.loadObjectFromFile(path);
        Map parametros = new HashMap();
        parametros.put("total",txtcant.getText());


        JasperPrint jasperPrint = JasperFillManager.fillReport(reporte, parametros, new JRBeanCollectionDataSource(listaregistros));
        JasperViewer.viewReport(jasperPrint, false);
        JRExporter exporter = new JRPdfExporter();
        exporter.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
        exporter.setParameter(JRExporterParameter.OUTPUT_FILE, new java.io.File("ReporteEntradaMateriaPrima.pdf"));
        exporter.exportReport();
    } catch (JRException ex) {
        Logger.getLogger(ConsultasEntradasMaterias.class.getName()).log(Level.SEVERE, null, ex);
    }


}//GEN-LAST:event_jButton2ActionPerformed

    private void rdfechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdfechaActionPerformed
        // TODO add your handling code here:
        if (rdfecha.isSelected() == true) {
            calendarFecha.setEnabled(true);
            calendarfecha1.setEnabled(false);
            calendarfecha2.setEnabled(false);
           
        }
    }//GEN-LAST:event_rdfechaActionPerformed

    private void intervalosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_intervalosActionPerformed
        if (intervalos.isSelected() == true) {

            calendarfecha1.setEnabled(true);
            calendarfecha2.setEnabled(true);
            calendarFecha.setEnabled(false);
           

        }
    }//GEN-LAST:event_intervalosActionPerformed

    private void txtcantActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtcantActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtcantActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnbuscar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private com.toedter.calendar.JDateChooser calendarFecha;
    private com.toedter.calendar.JDateChooser calendarfecha1;
    private com.toedter.calendar.JDateChooser calendarfecha2;
    private javax.swing.JRadioButton intervalos;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton rdfecha;
    private javax.swing.JRadioButton rdtodo;
    private javax.swing.JTable tbregistros;
    private javax.swing.JTextField txtcant;
    // End of variables declaration//GEN-END:variables

}
